@using CovidTest.Controllers;
@using System.Globalization;
@model SelectCountry;
@{
    ViewData["Title"] = "Queues";
    Assesment assesment = (Assesment)ViewData["User"];
    
}
<link rel="stylesheet" href="~/css/example-commons.css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://unpkg.com/gijgo@1.9.13/js/gijgo.min.js" type="text/javascript"></script>
<link href="https://unpkg.com/gijgo@1.9.13/css/gijgo.min.css" rel="stylesheet" type="text/css" />
<script src="~/js/moment.min.js"></script>
<style>
    #share {
        display: none;
        float: right;
        font-size: 14px;
        line-height: 170%;
    }

    #map {
        height: 100%;
    }

    /*.btn {
        padding: 0px;
    }*/

    .symbol {
        display: inline !important;
        float: right;
    }

    #search-here {
        z-index: 999;
        width: 12em;
        height: 3em;
        /*position: absolute;*/
        border-radius: 0.5em;
        box-shadow: 0 1px 6px 0 rgba(32, 33, 36, .28);
        background-color: #eee;
        text-align: center;
        line-height: 3em;
        font-weight: bold;
        font-size: 1.2em;
        /*top: 0;
        bottom: 0;
        margin: auto;
        right: 0;
        left: 0;*/
        cursor: pointer;
        position: absolute;
        bottom: 8%;
        left: 40%;
        display: none;
    }

    #typesearch {
        z-index: 999;

        /*position: absolute;*/
        border-radius: 0.5em;
        box-shadow: 0 1px 6px 0 rgba(32, 33, 36, .28);
        background-color: #eee;
        text-align: center;

        /*top: 0;
        bottom: 0;
        margin: auto;
        right: 0;
        left: 0;*/
        cursor: pointer;
        position: absolute;
        top: 5%;
        left: 4%;
    }

    #searchplace {
        z-index: 999;
        cursor: pointer;
        position: absolute;
        top: 15%;
        right: 5%;
    }

    /* Hide scrollbar for Chrome, Safari and Opera */
    .hidescroll::-webkit-scrollbar {
        display: none;
    }

    /* Hide scrollbar for IE and Edge */
    .hidescroll {
        -ms-overflow-style: none;
    }
    .message-window {
        position: absolute;
        /*width: 27%;*/
        width: 320px;
        z-index: 777;
        right: 0;
        top: 5%;
    }

 

</style>


<div class="wrapper" style="background-color:white; padding: 30px;height:90vh;">
    <div id="lateral" style="width:20%;float:left;">

        <h1 style="color:#707070;font-family:Poppins;font-size:26px; ">Results:</h1>
        <div id="listaResultados" class="hidescroll" style="height:75vh;overflow-y:scroll; margin-top:10px;">
        </div>
    </div>
    <div class="demo-wrapper" style="margin-top:-10px; width:79%; float:right; height:85vh;overflow: hidden;position: relative;">
        <div class="message-window">
            <div style="float:left;"> <button type="button" id="buttonHideTab" style=" border-radius: 0.5em 0 0 0.5em; float:right; color:gray; height:60px;padding:4px;" class="photo-details-messages btn btn-light"><i class="fas fa-caret-right"></i></button> </div>
            <div id="cos" style="background-color:white;padding:10px;float:right;border-radius: 0.5em;width: 300px;">
                <input id="autocomplete"
                       class="form-control mr-sm-2" style="margin-bottom: 10px;"
                       placeholder="Search an address"
                       onFocus="geolocate()"
                       type="text" />
                <input id="postCode" class="form-control mr-sm-2" style="margin-bottom: 10px;" type="search" placeholder="Postal Code" aria-label="Post Code">
                <select id="selectCountry" class="browser-default custom-select" style="margin-bottom: 10px;" asp-for="country"
                        asp-items="(List<SelectListItem>)@ViewData["Countries"]">
                    <option>Please select country</option>
                </select>
                <button type="button" style="float:right;" onclick="search()" class="photo-details-messages btn btn-info btn-lg"><i class="fas fa-search"></i></button>
            </div>

        </div>
        <div id="map" style="position: relative;">
        </div>
        <div id="typesearch" class="btn-group btn-group-toggle" style="cursor:pointer;" data-toggle="buttons">
            <label  style="cursor:pointer;" title="Supermarkets" class="btn btn-secondary active">
                <input type="radio" name="types" id="supermarket" value="supermarket" checked> <i class="fas fa-shopping-cart"></i>
            </label>
            <label  style="cursor:pointer; width:44px;" title="Pharmacies" class="btn btn-secondary">
                <input  type="radio" name="types" id="pharmacy" value="pharmacy"> <i class="fas fa-prescription-bottle-alt"></i>
            </label>
            <button type="button" onclick="getPlaces()" style="float:right;" class="btn btn-info"><i class="fas fa-search"></i></button>
        </div>

        <div id="search-here" onclick="getPlaces()">Search in this zone</div>
    </div>
    <div style="clear:both;"> </div>
</div>
    @*<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=APIKEY&libraries=visualization,places"></script>*@
    <script type="text/javascript">

    $('.photo-details-messages').click(function () {

        var hidden = $('.message-window');
        if (hidden.hasClass('visible')) {
            $('#buttonHideTab').html('<i class="fas fa-caret-right"></i>');
            hidden.animate({ "right": "0" }, "slow").removeClass('visible');
        } else {
            $('#buttonHideTab').html('<i class="fas fa-caret-left"></i>');
            hidden.animate({ "right": "-300px" }, "slow").addClass('visible');
        }
    });
        var placeSearch, autocomplete;

        var componentForm = {
            //street_number: 'short_name',
            //route: 'long_name',
            //locality: 'long_name',
            //administrative_area_level_1: 'short_name',
            countryauto: 'long_name',
            postal_code: 'short_name'
        };

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search predictions to
            // geographical location types.
            autocomplete = new google.maps.places.Autocomplete(
                document.getElementById('autocomplete'), { types: ['geocode'] });

            // Avoid paying for data that you don't need by restricting the set of
            // place fields that are returned to just the address components.
            autocomplete.setFields(['address_component']);

            // When the user selects an address from the drop-down, populate the
            // address fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
        }

        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();

            ////for (var component in componentForm) {
            ////    document.getElementById(component).value = '';
            ////    document.getElementById(component).disabled = false;
            ////}

            document.getElementById("postCode").value = '';
            $("#selectCountry").val("Please select country");

            // Get each component of the address from the place details,
            // and then fill-in the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                //if (addressType != "country")
                //{
                //if (componentForm[addressType]) {
                //    var val = place.address_components[i][componentForm[addressType]];
                //    document.getElementById(addressType).value = val;
                //    }
                //}
                if (addressType == "postal_code") {
                    var val = place.address_components[i]['short_name'];
                    document.getElementById("postCode").value = val;
                }
                else if (addressType == "country") {
                    var val = place.address_components[i]['long_name'];
                    $("#selectCountry").val(val);
                }
            }
        }

        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        function geolocate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle(
                        { center: geolocation, radius: position.coords.accuracy });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        }

        var latlng;
        var map, heatmap;
        var markers = [];
        var styles = {
            default: null,
            hide: [
                {
                    featureType: 'poi.business',
                    stylers: [{ visibility: 'off' }]
                }
            ]
        };
        var QueueInfo = null;
        var datetimeServerNow = null;

    function searchDialog(){

        $('#searchDialog').modal('show');
    }
        function initMap() {

            var zipcofg = '';
            latlng = getStartingLatLng();

            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 16,
                center:latlng,
                mapTypeControlOptions: {
                    mapTypeIds: []
                },
                minZoom: 16, maxZoom: 17,
                mapTypeId: 'roadmap',
                fullscreenControl: false,
                streetViewControl:false
            });
            map.setOptions({ styles: styles['hide'] });
            var primer = true;
            google.maps.event.addListener(map, 'idle', function () {
                //var bounds = map.getBounds();
                //var ne = bounds.getNorthEast();
                //var sw = bounds.getSouthWest();

                $("#search-here").show();
                if (primer) {
                    $("#search-here").hide();
                    primer = false;
                }
            });

            $("#search-here").hide();
            getPlaces();
            initAutocomplete();

            $('input[type=radio][name=types]').on('change', function () {
                getPlaces();
            });
        }

        function getStartingLatLng()
        {
            var LatStart = 41.378633;
            var LngStart = 2.1523914;
            LatStart = 37.9843892;
            LngStart = 23.7274669;
            @*@if (assesment != null && assesment.PartitionKey != "0"&& assesment.LatPost!=0)
            {
                @:LatStart = @assesment.LatPost.ToString().Replace(',','.');
                @:LngStart = @assesment.LongPost.ToString().Replace(',','.');
            }*@
            return new google.maps.LatLng(LatStart, LngStart);

        }
       
        
        function getPlaces()

        {
            while (markers.length) { markers.pop().setMap(null); }
            $("#search-here").hide();
            latlng = map.center;
            var type = $("input[name='types']:checked").val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetServerTime", "Home")',
                  dataType: "json",
                  cache: false,
                  async: false,
                success: function (res) {
                    datetimeServerNow = res;

                     $.ajax({
                type: 'GET',
                url: '@Url.Action("GetInfoQueues", "Home")',
                  dataType: "json",
                  cache: false,
                  async: false,
                  success: function (data) {
                      QueueInfo = data;

                      var request =
                      {
                          location: latlng,
                          radius: 400,
                          types: [type],
                          

                      };
                      var service = new google.maps.places.PlacesService(map);
                      service.nearbySearch(request, callback);
                    },
                    error: function (errorMsg) {

                    }
                });


                },
                error: function (errorMsg) {

                }
            });
               
        }

        function center(lat, long)
        {
            map.setCenter(new google.maps.LatLng(lat, long));
        }
        function callback(results, status)
        {
            var rellenoLista = "";
            if (status == google.maps.places.PlacesServiceStatus.OK)
            {
                for (var i = 0; i < results.length; i++)
                {
                    var iconurl = "";
                    var open = "Closed";
                    var placeStatus = 0;
                    var isopenplace = false;
                    var placeLocation = results[i].geometry.location;

                    if (results[i].opening_hours != null && results[i].opening_hours.open_now) {
                        open = "Open Now";
                        isopenplace = true;
                    }
                    if (QueueInfo[results[i].place_id] != undefined)
                    {
                        placeStatus = QueueInfo[results[i].place_id].state;

                    }
                    if ($("input[name='types']:checked").val() == "supermarket")
                    {
                        iconurl = "../images/queues/cart2_grey.png";
                        if (isopenplace) {
                            iconurl = "../images/queues/shopping_blue@4x.png";
                            if (placeStatus == 1) {
                                iconurl = "../images/queues/cart2_green.png";
                            }
                            else if (placeStatus == 2) {                                
                                iconurl = "../images/queues/cart2_yellow.png";
                            }
                            else if (placeStatus == 3) {
                                iconurl = "../images/queues/cart2_red.png";
                            }
                        }
                            
                    }
                    else
                    {
                        iconurl = "../images/queues/pharma_grey@4x.png";
                        if (isopenplace) {
                            iconurl = "../images/queues/pharma_blue@4x.png";
                            if (placeStatus == 1) {                                
                                iconurl = "../images/queues/pharma_green@4x.png";
                            }
                            else if (placeStatus == 2) {                                
                                iconurl = "../images/queues/pharma_yellow@4x.png";
                            }
                            else if (placeStatus == 3) {
                                iconurl = "../images/queues/pharma_red@4x.png";
                            }
                        }
                    }

                    rellenoLista += '<div class="card" style="cursor:pointer;" onclick="center(' + results[i].geometry.location.lat() + ',' + results[i].geometry.location.lng() +')">';
                    rellenoLista += '<div class="card-horizontal" style="display: flex;flex: 1 1 auto; align-items: center;justify - content: center;">';
                    rellenoLista += '<div style="font-family:Poppins;padding: 0.7rem;" class="card-body">';
                    rellenoLista += '<p style="color:#412F2F;font-family:Poppins;margin-bottom: 0.25rem;font-weight:bold;" class="card-title"  >' + results[i].name + '</p>';
                    rellenoLista += '<h7 style="color:#412F2F;font-family:Poppins;" class="card-subtitle mb-2 text-muted">' + results[i].vicinity + '</h7>';
                    rellenoLista += '<br/>';
                    if (isopenplace) {
                    rellenoLista += '<h7 style="color:#15C5D8;font-family:Poppins;font-weight: 600; font-size:18px;">' + open + '</h7>';
                    }
                    else
                    {
                        rellenoLista += '<h7 style="color:#707070;font-family:Poppins;font-weight: 600; font-size:18px;">' + open + '</h7>';
                    }
                    rellenoLista += '</div>';
                    rellenoLista += '<div class="img-square-wrapper" ><img id="imgSearch' + results[i].place_id + '" class="" style="width:70px;padding:10px;" src="' + iconurl+'" alt="Card image cap"></div>';
                    rellenoLista += '</div>';
                    rellenoLista += '</div>';
                    createMarker(results[i]);
                }

            }
            $("#listaResultados").html(rellenoLista);
        }
        function createMarker(place) {

            var status = 0;
            var placeLoc = place.geometry.location;
            var icon = "";
            var tipo = "";
            var isopenplace = false;
            var TextStatus = "This place is closed";
            var dateTimeAcual = null;
            var abierto = "Closed";
            if (place.opening_hours != null && place.opening_hours.open_now) {
                abierto = "Open";
                isopenplace = true;
                TextStatus = "Open without information!";
            }

            if (QueueInfo[place.place_id] != undefined) {
                status = QueueInfo[place.place_id].state;
                dateTimeAcual = QueueInfo[place.place_id].time;
            }

            var minutesString = "";
            if (dateTimeAcual != null)
            {
                var startTime = moment(dateTimeAcual);
                var end = moment(datetimeServerNow);
                var duration = moment.duration(end.diff(startTime));
                var hours = duration.asHours();
                var minutes = Math.floor(duration.asMinutes());
                minutesString += 'Last update: ' + minutes+' minutes ago.';
            }
           
            
            if ($("input[name='types']:checked").val() == "supermarket")
            {
                tipo = "Supermarket";
                icon = "../images/queues/cart2_grey.png";
                if (isopenplace)
                {
                    icon = "../images/queues/shopping_blue@4x.png";
                if (status == 1)
                {
                    TextStatus = " - 10 people on the line";
                    icon = "../images/queues/cart2_green.png";
                }
                else if (status == 2) {
                    TextStatus = "Between 10 and 20 ";
                     icon = "../images/queues/cart2_yellow.png";
                }
                else if (status == 3) {
                    TextStatus = " + 20 people in the line";
                    icon = "../images/queues/cart2_red.png";
                    }
                }
            }
            else {
                tipo = "Pharmacy";
                icon = "../images/queues/pharma_grey2@4x.png";
                if (isopenplace) {
                    icon = "../images/queues/pharma_blue2@4x.png";
                    if (status == 1) {

                        TextStatus = " < 10 people on the line";
                        icon = "../images/queues/pharma_green2@4x.png";
                    }
                    else if (status == 2) {
                        TextStatus = "Between 10 and 20 people";
                        icon = "../images/queues/pharma_yellow2@4x.png";
                    }
                    else if (status == 3) {
                        TextStatus = " + 20 people in the line";
                        icon = "../images/queues/pharma_red2@4x.png";
                    }
                }
            }


            var gpmarker = new google.maps.MarkerImage(icon, null, null, null, new google.maps.Size(30, 30));
            var marker = new google.maps.Marker(
                {
                    map: map,
                    position: place.geometry.location,
                    icon: gpmarker,
                    title: place.name,
                    id: place.place_id
                }

            );



            var contentStringb = 
                //First Page
                '<div id="contenta' + place.place_id +'" style="text-align: center;overflow: hidden;">'+
                '<p style="color:#15C5D8;font-family:Poppins;font-weight: 600; font-size:25px;line-height: 1;">' + place.name.toUpperCase()+'</p>'+
                '<p style="color:#707070;font-family:Poppins; font-weight: 500;font-size:13px;margin-top:-20px;">' + place.vicinity + '</p>' +
                '<div id="txtstatus' + place.place_id + '" class="btn" style="color:white;background: #15C5D8 0% 0% no-repeat padding-box; border-radius: 10px;height: 41px;">' + TextStatus + '</div>' +
                '<p id="lastupdatetxt' + place.place_id + '" style="color:#707070;font-family:Poppins; font-weight: 500;font-size:11px;">' +  minutesString+ '</p>' +
                '<p style="color:#707070;font-family:Poppins; font-weight: 500;font-size:13px;">Are you here? How may people are waiting in the line?</p>' + 
                '<div class="row">' +
                '<div class="col">' +
                '<button id="queueless' + place.place_id + '" onclick="Less(' + "'" + place.place_id + "'" + ')" type="button" style="font-size:10px;font-family:Poppins;" class="queuetim btn btn-light">LESS THAN 10</button>' +
                '</div>' +
                ' <div class="col">' +
                '<button id="queuebetween' + place.place_id + '" onclick="Between(' + "'" + place.place_id + "'" + ')" type="button" style="font-size:10px;font-family:Poppins;" class="queuetim btn btn-light">BETWEEN 10 & 20</button>' +
                '</div>' +
                '<div class="col">' +
                '<button id="queuenummore' + place.place_id + '" onclick="More(' + "'" + place.place_id + "'" + ')" type="button" style="font-size:10px;font-family:Poppins;" class="queuetim btn btn-light">MORE THAN 20</button>' +
                '</div>' +
                '</div>' +
                //'<div class="btn btn-light" onclick="moveForward(' + "'" + place.place_id + "'" + ')" style="color:#707070;cursor:pointer;width:70%;font-size: 12px;">' + "Are you here? Make a contribution to the community" + '</div>' +
                '<br/>' +
                '<br/>' +
                '</div>'+

                //Second Page

                //'<div id="contentb' + place.place_id +'" style="text-align: center;display:none;overflow: hidden;min-height: 150px;">' +                 
                //'<p style="color:#707070;font-family:Poppins; font-weight: 500;font-size:13px;">How may people are waiting in the line?</p>' + 
                //'<div class="row">'+
                //    '<div class="col">'+
                //'<button id="queueless' + place.place_id + '" onclick="Less(' + "'" + place.place_id + "'" + ')" type="button" style="font-size:10px;font-family:Poppins;" class="queuetim btn btn-light">LESS THAN 10</button>'+
                //    '</div>'+
                //   ' <div class="col">'+
                //'<button id="queuebetween' + place.place_id + '" onclick="Between(' + "'" + place.place_id + "'" + ')" type="button" style="font-size:10px;font-family:Poppins;" class="queuetim btn btn-light">BETWEEN 10 & 20</button>'+
                //    '</div>'+
                //    '<div class="col">'+
                //'<button id="queuenummore' + place.place_id + '" onclick="More(' + "'" + place.place_id + "'" + ')" type="button" style="font-size:10px;font-family:Poppins;" class="queuetim btn btn-light">MORE THAN 20</button>'+
                //    '</div>'+
                //'</div>'+
                //'</div>' +
                 //Third Page
                '<div id="contentc' + place.place_id + '" style="text-align: center;display:none;overflow: hidden;min-height: 150px;">' +
                '<p style="color:#15C5D8;font-family:Poppins;font-weight: 600; font-size:25px;">THANKS!</p>' +
                '<i style="color:red;" class="fas fa-heart fa-3x"></i>' +
                '<br/>' +
                '<br/>' + 
                '<p style="color:#707070;font-family:Poppins; font-weight: 500;font-size:13px;">Your contribution helps your neighbours and community to make informed decisions!</p>' +

                '</div>';
              
           var infowindowb = new google.maps.InfoWindow({
               content: contentStringb,
               id: place.place_id
               
            });
            infowindowb.setOptions({ maxWidth: 300 }); 
            google.maps.event.addListener(marker, 'click', (function (marker) {
                return function () {
                    center(marker.position.lat(), marker.position.lng())
                    infowindowb.open(map, marker);
                    $("#contenta" + place.place_id).show();
                    $("#contenta" + place.place_id).css({ 'opacity': 1 });
                    $("#contentb" + place.place_id).hide();
                    $("#contentc" + place.place_id).hide();
                }
            })(marker));
            
            //google.maps.event.addListener(marker, 'mouseout', (function (marker) {
            //    return function () {
            //        infowindowb.close();
            //    }
            //})(marker));
            markers.push(marker);
        }

        function Less(elmId) {
            SaveQueueInfo("1", elmId);
            updateMarker(elmId, "1");
            updateTexts(elmId, "1");
        }
        function Between(elmId) {
            SaveQueueInfo("2", elmId);
            updateMarker(elmId, "2");
            updateTexts(elmId, "2");
        }
        function More(elmId) {
            SaveQueueInfo("3", elmId);
            updateMarker(elmId, "3");
            updateTexts(elmId, "3");
        }
        function updateTexts(elemId, state)
        {
            $("#lastupdatetxt" + elemId).html('Last update: 0 minutes ago.');
            if (state == 1) {
                $("#txtstatus" + elemId).html('< 10 people on the line');               
            }
            else if (state == 2) {
                $("#txtstatus" + elemId).html('Between 10 and 20 people');                
            }
            else if (state == 3) {
                $("#txtstatus" + elemId).html(' + 20 people in the line');               
            }
        }
        function updateMarker(elemId,state) {

            var superMa = true;
            if ($("input[name='types']:checked").val() == "pharmacy") {
                superMa= false;
            }
        
            var newIcon = "";
            if (state == 1) {
                if (superMa) {
                    newIcon = "../images/queues/cart2_green.png";
                }
                else {
                    newIcon = "../images/queues/pharma_green2@4x.png";
                }
            }
            else if (state == 2) {
                if (superMa) {
                    newIcon = "../images/queues/cart2_yellow.png";
                }
                else {
                    newIcon = "../images/queues/pharma_yellow2@4x.png";
                }
            }
            else if (state == 3) {
                if (superMa) {
                    newIcon = "../images/queues/cart2_red.png";
                }
                else {
                    newIcon = "../images/queues/pharma_red2@4x.png";
                }
            }
            $("#imgSearch" + elemId).attr("src", newIcon);
            var gpmarker = new google.maps.MarkerImage(newIcon, null, null, null, new google.maps.Size(30, 30));
            for (var i = 0; i < markers.length; i++)
            {
                if (markers[i].id == elemId) {
                    markers[i].setIcon(gpmarker);
                    
                }
            }

            
        }
        function moveForward(id) {

            var currentSlide = $("#contenta" + id);
            var nextSlide = $("#contentc" + id);
            nextSlide.show();
            //hide the current fieldset with style
            currentSlide.animate({ opacity: 0 }, {
                step: function (now) {
                    // for making fielset appear animation
                    opacity = 1 - now;
                    currentSlide.css({
                        'display': 'none',
                        'position': 'relative'
                    });
                    nextSlide.css({ 'opacity': opacity });
                },
                duration: 600
            });
        }
        function moveForwardEnd(id) {

            var currentSlide = $("#contenta" + id);
            var nextSlide = $("#contentc" + id);
            nextSlide.show();
            //hide the current fieldset with style
            currentSlide.animate({ opacity: 0 }, {
                step: function (now) {
                    // for making fielset appear animation
                    opacity = 1 - now;
                    currentSlide.css({
                        'display': 'none',
                        'position': 'relative'
                    });
                    nextSlide.css({ 'opacity': opacity });
                },
                duration: 600
            });
        }
        function SaveQueueInfo(state, id)
        {
             $.ajax({
    type: 'GET',
    url: '@Url.Action("SaveQueueInfo", "Home")',
      data: { Queue: state, Place: id},
      dataType: "json",
      cache: false,
      async: false,
      success: function (data) {

          moveForwardEnd(data.partitionKey);


            },
    error: function(errorMsg) {
                
            }
        });
        }

        function search()
        {
            $('#searchDialog').modal('hide');
            var address = $("#autocomplete").val();
            var zip = $("#postCode").val();          
            var country = $("#selectCountry").val();
          geocoder = new google.maps.Geocoder();
          var addressb = address + "," + zip + "," + country;
          geocoder = new google.maps.Geocoder();
          geocoder.geocode({
              'address': addressb
          }, function (results, status) {
              if (status == google.maps.GeocoderStatus.OK) {

                  latlng = results[0].geometry.location;
                  center(results[0].geometry.location.lat(), results[0].geometry.location.lng());
                  getPlaces();
              }
          });

            

        }


    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=APIKEY&libraries=visualization,places&callback=initMap"></script>
 

